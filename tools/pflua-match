#!/usr/bin/env luajit

package.path = package.path .. ";../src/?.lua"

local ffi = require("ffi")
local pf = require("pf")
local utils = require("pf.utils")
local savefile = require("pf.savefile")

local function filter(packets, pred)
   local seen, matched = 0, 0
   for i = 1,#packets do
      packet = packets[i]
      seen = seen + 1
      if pred(packet.packet, packet.len) then matched = matched + 1 end
   end
   return seen, matched
end

function main(in_file, filter_str)
   local packets = savefile.load_packets(in_file)
   local pred = pf.compile_filter(filter_str)
   -- Warm up.
   filter(packets, pred)
   local start = utils.now()
   local seen,matched
   for i = 1,999 do
      seen, matched = filter(packets, pred)
   end   
   local elapsed = utils.now() - start
   print(string.format("Matched %d/%d packets from %s (%f MPPS).",
                       matched, seen, in_file, seen/elapsed*1e-6))
end

local in_file, filter_str = ...
assert(filter_str, "usage: pflua-match IN.PCAP FILTER")

main(in_file, filter_str)
